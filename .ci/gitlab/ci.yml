# THIS FILE IS AUTOGENERATED -- DO NOT EDIT #
#   Edit and Re-run .ci/gitlab/template.ci.py instead       #

stages:
  - sanity
  - test
  - build
  - install_checks
  - deploy

#************ definition of base jobs *********************************************************************************#

.test_base:
    retry:
        max: 2
        when:
            - runner_system_failure
            - stuck_or_timeout_failure
            - api_failure
    tags:
      - autoscaling
    rules:
        - if: $CI_COMMIT_REF_NAME =~ /^staging.*/
          when: never
        - when: on_success
    variables:
        PYPI_MIRROR_TAG: 43cac967c4383ac86bc223b3827394e3d7baea65
        CI_IMAGE_TAG: 43cac967c4383ac86bc223b3827394e3d7baea65
        PYMOR_HYPOTHESIS_PROFILE: ci
        PYMOR_PYTEST_EXTRA: ""
        BINDERIMAGE: ${CI_REGISTRY_IMAGE}/binder:${CI_COMMIT_REF_SLUG}

.pytest:
    extends: .test_base
    tags:
      - long execution time
      - autoscaling
    environment:
        name: unsafe
    stage: test
    after_script:
      - .ci/gitlab/after_script.bash
    cache:
        key: same_db_on_all_runners
        paths:
          - .hypothesis
    artifacts:
        when: always
        name: "$CI_JOB_STAGE-$CI_COMMIT_REF_SLUG"
        expire_in: 3 months
        paths:
            - src/pymortests/testdata/check_results/*/*_changed
            - docs/source/*_extracted.py
            - coverage*
            - memory_usage.txt
            - .hypothesis
            - test_results*.xml


.submit:
    extends: .test_base
    image: zivgitlab.wwu.io/pymor/docker/pymor/ci_sanity:43cac967c4383ac86bc223b3827394e3d7baea65
    variables:
        XDG_CACHE_DIR: /tmp
    retry:
        max: 2
        when:
            - always
    environment:
        name: safe
    rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_REF_NAME =~ /^github.*/
      when: never
    - when: on_success
    stage: deploy
    script: .ci/gitlab/submit.bash

.docker-in-docker:
    tags:
      - docker-in-docker
      - autoscaling
    extends: .test_base
    timeout: 45 minutes
    retry:
        max: 2
        when:
            - runner_system_failure
            - stuck_or_timeout_failure
            - api_failure
            - unknown_failure
            - job_execution_timeout
    
    image: zivgitlab.wwu.io/pymor/docker/pymor/docker-in-docker:d1b5ebb4dc42a77cae82411da2e503a88bb8fb3a
    variables:
        DOCKER_HOST: tcp://docker:2375/
        DOCKER_DRIVER: overlay2
    before_script:
        - 'export SHARED_PATH="${CI_PROJECT_DIR}/shared"'
        - mkdir -p ${SHARED_PATH}
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    services:
        - name: zivgitlab.wwu.io/pymor/docker/docker:dind
          alias: docker
    environment:
        name: unsafe


# this should ensure binderhubs can still build a runnable image from our repo
.binder:
    extends: .docker-in-docker
    stage: install_checks
    needs: ["ci setup"]
    rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - when: on_success
    variables:
        USER: juno

.wheel:
    extends: .docker-in-docker
    stage: build
    needs: ["ci setup"]
    tags: [mike]
    rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - when: on_success


.check_wheel:
    extends: .test_base
    stage: install_checks
    rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - when: on_success
    services:
      - name: zivgitlab.wwu.io/pymor/docker/pymor/devpi:1
        alias: pymor__devpi
    before_script:
      # bump to our minimal version
      - python3 -m pip install -U pip==19.0
      - python3 -m pip install devpi-client
      - devpi use http://pymor__devpi:3141/root/public --set-cfg
      - devpi login root --password none
      - devpi upload --from-dir --formats=* ./shared
    # the docker service adressing fails on other runners
    tags: [mike]

.sanity_checks:
    extends: .test_base
    image: zivgitlab.wwu.io/pymor/docker/pymor/ci_sanity:43cac967c4383ac86bc223b3827394e3d7baea65
    stage: sanity
#******** end definition of base jobs *********************************************************************************#

# https://docs.gitlab.com/ee/ci/yaml/README.html#workflowrules-templates
include:
  - template: 'Workflows/Branch-Pipelines.gitlab-ci.yml'

#******* sanity stage

# this step makes sure that on older python our install fails with
# a nice message ala "python too old" instead of "SyntaxError"
verify setup.py:
    extends: .sanity_checks
    script:
        - python3 setup.py egg_info

ci setup:
    extends: .sanity_checks
    script:
        - apk add jq
        - ${CI_PROJECT_DIR}/.ci/gitlab/ci_sanity_check.bash "3.7 3.8 3.9" "2010 2014"

#****** test stage
mpi 3 7:
    extends: .pytest
    rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - when: on_success
    variables:
        COVERAGE_FILE: coverage_mpi__3.7
    services:
    image: zivgitlab.wwu.io/pymor/docker/pymor/testing_py3.7:43cac967c4383ac86bc223b3827394e3d7baea65
    script:
        - |
          if [[ "$CI_COMMIT_REF_NAME" == *"github/PR_"* ]]; then
            echo selecting hypothesis profile "ci_pr" for branch $CI_COMMIT_REF_NAME
            export PYMOR_HYPOTHESIS_PROFILE="ci_pr"
          else
            echo selecting hypothesis profile "ci" for branch $CI_COMMIT_REF_NAME
            export PYMOR_HYPOTHESIS_PROFILE="ci"
          fi
        - ./.ci/gitlab/test_mpi.bash
mpi 3 8:
    extends: .pytest
    rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - when: on_success
    variables:
        COVERAGE_FILE: coverage_mpi__3.8
    services:
    image: zivgitlab.wwu.io/pymor/docker/pymor/testing_py3.8:43cac967c4383ac86bc223b3827394e3d7baea65
    script:
        - |
          if [[ "$CI_COMMIT_REF_NAME" == *"github/PR_"* ]]; then
            echo selecting hypothesis profile "ci_pr" for branch $CI_COMMIT_REF_NAME
            export PYMOR_HYPOTHESIS_PROFILE="ci_pr"
          else
            echo selecting hypothesis profile "ci" for branch $CI_COMMIT_REF_NAME
            export PYMOR_HYPOTHESIS_PROFILE="ci"
          fi
        - ./.ci/gitlab/test_mpi.bash
mpi 3 9:
    extends: .pytest
    rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - when: on_success
    variables:
        COVERAGE_FILE: coverage_mpi__3.9
    services:
    image: zivgitlab.wwu.io/pymor/docker/pymor/testing_py3.9:43cac967c4383ac86bc223b3827394e3d7baea65
    script:
        - |
          if [[ "$CI_COMMIT_REF_NAME" == *"github/PR_"* ]]; then
            echo selecting hypothesis profile "ci_pr" for branch $CI_COMMIT_REF_NAME
            export PYMOR_HYPOTHESIS_PROFILE="ci_pr"
          else
            echo selecting hypothesis profile "ci" for branch $CI_COMMIT_REF_NAME
            export PYMOR_HYPOTHESIS_PROFILE="ci"
          fi
        - ./.ci/gitlab/test_mpi.bash

# THIS FILE IS AUTOGENERATED -- DO NOT EDIT #
#   Edit and Re-run .ci/gitlab/template.ci.py instead       #
